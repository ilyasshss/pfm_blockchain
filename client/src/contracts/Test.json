{
  "contractName": "Test",
  "abi": [
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/test.sol\":\"Test\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/test.sol\":{\"keccak256\":\"0x37993d0698cef043c04cd29aeed33899651f147e5cec8d2314c54dcbaf58095e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de6a54f1557d1206f0bc1b9bc9ad45b1399c745ad1b41cd9fc890fde43d2d466\",\"dweb:/ipfs/QmUCgrL266DWE4iKcxwKzrtEfbdxqeqFjJ5FDHBGTqhNUM\"]}},\"version\":1}",
  "bytecode": "0x608060405260015f55348015610013575f80fd5b5060ac806100205f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c80630c55699c14602a575b5f80fd5b60306044565b604051603b9190605f565b60405180910390f35b5f5481565b5f819050919050565b6059816049565b82525050565b5f60208201905060705f8301846052565b9291505056fea2646970667358221220f0da18eaeeb6c8fbd8ca4fd05d9d18903ddcb1877756b773328479010d83ef8f64736f6c63430008150033",
  "deployedBytecode": "0x6080604052348015600e575f80fd5b50600436106026575f3560e01c80630c55699c14602a575b5f80fd5b60306044565b604051603b9190605f565b60405180910390f35b5f5481565b5f819050919050565b6059816049565b82525050565b5f60208201905060705f8301846052565b9291505056fea2646970667358221220f0da18eaeeb6c8fbd8ca4fd05d9d18903ddcb1877756b773328479010d83ef8f64736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nativeSrc": "0:439:10",
        "nodeType": "YulBlock",
        "src": "0:439:10",
        "statements": [
          {
            "body": {
              "nativeSrc": "52:32:10",
              "nodeType": "YulBlock",
              "src": "52:32:10",
              "statements": [
                {
                  "nativeSrc": "62:16:10",
                  "nodeType": "YulAssignment",
                  "src": "62:16:10",
                  "value": {
                    "name": "value",
                    "nativeSrc": "73:5:10",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nativeSrc": "62:7:10",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nativeSrc": "7:77:10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nativeSrc": "34:5:10",
                "nodeType": "YulTypedName",
                "src": "34:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nativeSrc": "44:7:10",
                "nodeType": "YulTypedName",
                "src": "44:7:10",
                "type": ""
              }
            ],
            "src": "7:77:10"
          },
          {
            "body": {
              "nativeSrc": "155:53:10",
              "nodeType": "YulBlock",
              "src": "155:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nativeSrc": "172:3:10",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "195:5:10",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nativeSrc": "177:17:10",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:10"
                        },
                        "nativeSrc": "177:24:10",
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "165:6:10",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:10"
                    },
                    "nativeSrc": "165:37:10",
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:10"
                  },
                  "nativeSrc": "165:37:10",
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nativeSrc": "90:118:10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nativeSrc": "143:5:10",
                "nodeType": "YulTypedName",
                "src": "143:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nativeSrc": "150:3:10",
                "nodeType": "YulTypedName",
                "src": "150:3:10",
                "type": ""
              }
            ],
            "src": "90:118:10"
          },
          {
            "body": {
              "nativeSrc": "312:124:10",
              "nodeType": "YulBlock",
              "src": "312:124:10",
              "statements": [
                {
                  "nativeSrc": "322:26:10",
                  "nodeType": "YulAssignment",
                  "src": "322:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "334:9:10",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:10"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "345:2:10",
                        "nodeType": "YulLiteral",
                        "src": "345:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "330:3:10",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:10"
                    },
                    "nativeSrc": "330:18:10",
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "322:4:10",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nativeSrc": "402:6:10",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "415:9:10",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:10"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "426:1:10",
                            "nodeType": "YulLiteral",
                            "src": "426:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "411:3:10",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:10"
                        },
                        "nativeSrc": "411:17:10",
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nativeSrc": "358:43:10",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:10"
                    },
                    "nativeSrc": "358:71:10",
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:10"
                  },
                  "nativeSrc": "358:71:10",
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nativeSrc": "214:222:10",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "284:9:10",
                "nodeType": "YulTypedName",
                "src": "284:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "296:6:10",
                "nodeType": "YulTypedName",
                "src": "296:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "307:4:10",
                "nodeType": "YulTypedName",
                "src": "307:4:10",
                "type": ""
              }
            ],
            "src": "214:222:10"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:42:9:-:0;;;97:1;81:17;;60:42;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:42:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;81:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;7:77:10:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract Test {\r\n    uint public x = 1;\r\n}\r\n",
  "sourcePath": "X:\\School\\Crypto Project\\client\\contracts\\test.sol",
  "ast": {
    "absolutePath": "project:/contracts/test.sol",
    "exportedSymbols": {
      "Test": [
        530
      ]
    },
    "id": 531,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 526,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Test",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 530,
        "linearizedBaseContracts": [
          530
        ],
        "name": "Test",
        "nameLocation": "69:4:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "0c55699c",
            "id": 529,
            "mutability": "mutable",
            "name": "x",
            "nameLocation": "93:1:9",
            "nodeType": "VariableDeclaration",
            "scope": 530,
            "src": "81:17:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 527,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "81:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "97:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          }
        ],
        "scope": 531,
        "src": "60:42:9",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:71:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-16T20:32:21.458Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}